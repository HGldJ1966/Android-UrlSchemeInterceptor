{"name":"Url Scheme Interceptor","tagline":"Intercept and debug url scheme on Android","body":"![Android-UrlScheme Interceptor](https://raw.githubusercontent.com/SimonMarquis/Android-UrlSchemeInterceptor/master/art/Play%20Store%20Feature.png \"Android-UrlSchemeInterceptor\")\r\n\r\n## Test it\r\nWhat's gonna happen?  \r\n✘ App not installed → Redirect to Play Store  \r\n✔ App installed → Start the application or the interceptor  \r\n\r\n**<a href=\"intent://example.com:8042/over/there/index.html?query=something#refresh#Intent;scheme=test;package=fr.smarquis.usi.sample;action=android.intent.action.VIEW;S.string=abc;B.boolean=true;i.int=123;l.long=123456;f.float=123.456;end\">Click here</a> to trigger the url scheme!**\r\n\r\n## Integration\r\nImport the [aar file](https://github.com/SimonMarquis/Android-UrlSchemeInterceptor/releases) into your project as a new module called `usi`:  \r\n`File` → `New` → `New Module` → `Import .JAR/.AAR package`\r\n\r\nThen in your `build.gradle` file:\r\n\r\n```groovy\r\ndependencies {\r\n    compile project(':usi')\r\n}\r\n```\r\n\r\nIn your `Application` class:\r\n\r\n```java\r\npublic class YourApplication extends Application {\r\n\r\n    @Override public void onCreate() {\r\n        super.onCreate();\r\n        Usi.intercept(this);\r\n    }\r\n\r\n}\r\n```\r\n\r\nIf you want to intercept a custom scheme, simply override the `usi_scheme` string resource:\r\n```xml\r\n<resources>\r\n    <string name=\"usi_scheme\">your-custom-scheme</string>\r\n</resources>\r\n```\r\n\r\n**That's it!** UrlSchemeInterceptor will automatically intercept the corresponding scheme.\r\n\r\n## Manual trigger\r\nThis demo application can be launched without any modification.  \r\nUse this `adb` command to trigger the default url scheme with some parameters:\r\n```shell\r\nadb shell am start \\\r\n    -a android.intent.action.VIEW \\\r\n    -d 'usi://example.com:8042/over/there/index.html?query=something#refresh' \\\r\n    --es extra-string abc \\\r\n    --ez extra-boolean true \\\r\n    --ei extra-int 123 \\\r\n    --el extra-long 123456 \\\r\n    --ef extra-float 123.456 \\\r\n    --eu extra-uri http://www.google.com \\\r\n    --esa extra-stringArray a,b,c\r\n```\r\n\r\n## Chrome Intents\r\nThe default Chrome implementation is done through [intents](https://developer.chrome.com/multidevice/android/intents).  \r\nSimply wrap the following *intent* into an `<a href=\"...\">` tag.\r\n```\r\nintent://example.com:8042/over/there/index.html?query=something#refresh#Intent;scheme=usi;package=fr.smarquis.usi.sample;action=android.intent.action.VIEW;S.string=abc;B.boolean=true;i.int=123;l.long=123456;f.float=123.456;end\r\n```\r\n\r\nThe `package=x.y.z;` is mandatory to prompt the user to install the app if it is not already on the device.\r\n\r\n## TODO\r\n- [ ] Publish aar to jCenter and Maven","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}